<UserControl
    x:Class="leonardo.Controls.LuiInputGroup"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attachedP="clr-namespace:leonardo.AttachedProperties"
    xmlns:controls="clr-namespace:leonardo.Controls"
    xmlns:converter="clr-namespace:leonardo.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:leonardo.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="control"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/LuiPalette.xaml" />
                <ResourceDictionary Source="../Styles/LuiButtonStyle.xaml" />
                <ResourceDictionary Source="../Styles/LuiTextboxStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converter:BindingDiagConverter x:Key="BindingDiagConverter" />

        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel>
        <TextBlock
            Margin="0,0,0,7"
            FontFamily="{StaticResource QlikViewSans}"
            FontSize="14"
            FontWeight="Thin"
            Foreground="{StaticResource Lui.Brush.Grayscale30}"
            Text="{Binding ElementName=control, Path=LabelText}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding ElementName=control, Path=LabelText}"
                            Value="">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Grid x:Name="maingrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <local:LuiButton
                x:Name="mainbuttonLeft"
                Grid.Column="0"
                attachedP:ThemeProperties.BorderThickness="1,1,0,1"
                attachedP:ThemeProperties.ButtonSize="Default"
                attachedP:ThemeProperties.CornerRadius="3,0,0,3"
                attachedP:ThemeProperties.IconRight="{Binding LeftCommandIcon, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LuiInputGroup}}"
                Command="{Binding ElementName=control, Path=LeftCommand}"
                CommandParameter="{Binding LeftCommandParameter, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LuiInputGroup}}"
                Foreground="{Binding ElementName=control, Path=LeftCommandForeground}">
                <local:LuiButton.Style>
                    <Style
                        BasedOn="{StaticResource LuiButtonStyle}"
                        TargetType="local:LuiButton">
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding LeftCommandIcon, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LuiInputGroup}}"
                                Value="lui_icon_none">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <Trigger Property="attachedP:ThemeProperties.Inverted" Value="True">
                                <Setter Property="Background" Value="{StaticResource Lui.Brush.Grayscale50}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource Lui.Brush.Grayscale5}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </local:LuiButton.Style>
            </local:LuiButton>
            <local:LuiInput
                x:Name="maininputleftrounded"
                Grid.Column="1"
                VerticalAlignment="Center"
                attachedP:ThemeProperties.BorderThickness="1"
                attachedP:ThemeProperties.CornerRadius="3,0,0,3"
                IsEnabled="{Binding ElementName=control, Path=IsInputEnabled}"
                Text="{Binding Text, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LuiInputGroup}}" />
            <local:LuiButton
                x:Name="mainbuttonRight"
                Grid.Column="2"
                attachedP:ThemeProperties.BorderThickness="0,1,1,1"
                attachedP:ThemeProperties.ButtonSize="Default"
                attachedP:ThemeProperties.CornerRadius="0,3,3,0"
                attachedP:ThemeProperties.IconRight="{Binding RightCommandIcon, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LuiInputGroup}}"
                Command="{Binding ElementName=control, Path=RightCommand}"
                CommandParameter="{Binding RightCommandParameter, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LuiInputGroup}}"
                Foreground="{Binding ElementName=control, Path=RightCommandForeground}">
                <!--  Command="{Binding RightCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=local:LuiInputGroup}}"  -->
                <local:LuiButton.Style>
                    <Style
                        BasedOn="{StaticResource LuiButtonStyle}"
                        TargetType="local:LuiButton">
                        <Style.Triggers>
                            <Trigger Property="attachedP:ThemeProperties.Inverted" Value="True">
                                <Setter Property="Background" Value="{StaticResource Lui.Brush.Grayscale50}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource Lui.Brush.Grayscale5}" />
                                <Setter Property="Foreground" Value="{StaticResource Lui.Brush.Grayscale100}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </local:LuiButton.Style>
            </local:LuiButton>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <Trigger Property="attachedP:ThemeProperties.Inverted" Value="True">
                            <Setter Property="Background" Value="{StaticResource Lui.Brush.Grayscale50}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </StackPanel>
</UserControl>
