<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attachedP="clr-namespace:leonardo.AttachedProperties"
    xmlns:controls="clr-namespace:leonardo.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Styles/LuiPalette.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <FontFamily x:Key="QlikViewSans">
        pack://application:,,,/qlik-resources;component/#QlikView Sans
    </FontFamily>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush
        x:Key="Button.Static.Background"
        Color="#FFDDDDDD" />
    <SolidColorBrush
        x:Key="Button.Static.Border"
        Color="#FF707070" />
    <SolidColorBrush
        x:Key="Button.MouseOver.Background"
        Color="#FFBEE6FD" />
    <SolidColorBrush
        x:Key="Button.MouseOver.Border"
        Color="#FF3C7FB1" />
    <SolidColorBrush
        x:Key="Button.Pressed.Background"
        Color="#FFC4E5F6" />
    <SolidColorBrush
        x:Key="Button.Pressed.Border"
        Color="#FF2C628B" />
    <SolidColorBrush
        x:Key="Button.Disabled.Background"
        Color="#FFF4F4F4" />
    <SolidColorBrush
        x:Key="Button.Disabled.Border"
        Color="#FFADB2B5" />
    <SolidColorBrush
        x:Key="Button.Disabled.Foreground"
        Color="#FF838383" />

    <LinearGradientBrush x:Key="LuiButton.Gradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{StaticResource LUI.Color.Grayscale100}" />
        <GradientStop Offset="1.0" Color="{StaticResource LUI.Color.Grayscale90}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LuiButton.Gradient_Darker" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{StaticResource LUI.Color.Grayscale95}" />
        <GradientStop Offset="1.0" Color="{StaticResource LUI.Color.Grayscale85}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LuiButton.Gradient.Dark" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{StaticResource LUI.Color.Grayscale45}" />
        <GradientStop Offset="1.0" Color="{StaticResource LUI.Color.Grayscale35}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LuiButton.Gradient.Dark_lighter" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="{StaticResource LUI.Color.Grayscale55}" />
        <GradientStop Offset="1.0" Color="{StaticResource LUI.Color.Grayscale45}" />
    </LinearGradientBrush>
    <Style
        x:Key="LuiButtonStyle"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="FontFamily" Value="{StaticResource QlikViewSans}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(attachedP:ThemeProperties.BorderThickness)}"
                        CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(attachedP:ThemeProperties.CornerRadius)}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <controls:LuiIcon
                                Grid.Column="0"
                                Margin="10,0,0,0"
                                VerticalAlignment="Center"
                                Icon="{Binding Path=(attachedP:ThemeProperties.IconLeft), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}" />
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <controls:LuiIcon
                                Grid.Column="2"
                                Margin="0,0,10,0"
                                VerticalAlignment="Center"
                                Icon="{Binding Path=(attachedP:ThemeProperties.IconRight), RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>-->
                        <Trigger Property="attachedP:ThemeProperties.ButtonSize" Value="Default">
                            <Setter Property="Height" Value="28" />
                        </Trigger>
                        <Trigger Property="attachedP:ThemeProperties.ButtonSize" Value="Large">
                            <Setter Property="Height" Value="38" />
                        </Trigger>
                        <Trigger Property="attachedP:ThemeProperties.ButtonSize" Value="ExtraLarge">
                            <Setter Property="Height" Value="54" />
                        </Trigger>



                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Default" />
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale30}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale80}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Default" />
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale30}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale0}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Default" />
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.Grayscale30}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale60}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Default" />
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.Grayscale30}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale100}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Toolbar" />
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LuiButton.Gradient}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale30}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale80}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Toolbar" />
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LuiButton.Gradient_Darker}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale30}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale80}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Toolbar" />
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LuiButton.Gradient.Dark}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale0}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Toolbar" />
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LuiButton.Gradient.Dark_lighter}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale0}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Info" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.BLUE}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.BLUE}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Info" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.BLUE_lighten_15}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.BLUE_lighten_15}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Error" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.RED}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.RED}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Error" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.RED_lighten_15}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.RED_lighten_15}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Warning" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.ORANGE}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.ORANGE}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Warning" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.ORANGE_lighten_15}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.ORANGE_lighten_15}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Success" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.GREEN}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.GREEN}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.ButtonScheme" Value="Success" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.GREEN_lighten_15}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter Property="BorderBrush" Value="{StaticResource LUI.Brush.GREEN_lighten_15}" />
                        </MultiTrigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.Grayscale30}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LUI.Brush.Grayscale5}" />
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                        </MultiTrigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource LUI.Brush.BLUE}" />
                        </Trigger>
                        <Trigger Property="attachedP:ThemeProperties.Rounded" Value="True">
                            <Setter TargetName="border" Property="CornerRadius" Value="14" />
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>