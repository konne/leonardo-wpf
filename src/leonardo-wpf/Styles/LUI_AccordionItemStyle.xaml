<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attachedP="clr-namespace:leonardo.AttachedProperties"
    xmlns:controls="clr-namespace:leonardo.Controls"
    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/palette.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <FontFamily x:Key="QlikViewSans">
        pack://application:,,,/leonardo-wpf;component/#QlikView Sans
    </FontFamily>


    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            SnapsToDevicePixels="true"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ExpanderDownHeaderStyle"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="#4D4D4D"
                        BorderThickness="0.1">
                        <Grid
                            Background="Transparent"
                            SnapsToDevicePixels="False">
                            <ContentPresenter
                                Margin="0,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ContextmenuAccordion"
        TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        x:Name="Border"
                        Height="40"
                        Background="White"
                        BorderBrush="Black">
                        <StackPanel
                            ClipToBounds="True"
                            IsItemsHost="True"
                            Orientation="Vertical" />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="AccordionExpanderStyle"
        TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <StackPanel
                                DockPanel.Dock="Top"
                                Orientation="Horizontal">
                                <Line
                                    StrokeThickness="5"
                                    Y1="0"
                                    Y2="39">
                                    <Line.Style>
                                        <Style TargetType="Line">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Expander}, Path=IsExpanded}"
                                                    Value="True">
                                                    <Setter Property="Stroke" Value="Orange" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Expander}, Path=IsExpanded}"
                                                    Value="False">
                                                    <Setter Property="Stroke" Value="#4D4D4D" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Line.Style>
                                </Line>
                                <ToggleButton
                                    x:Name="HeaderSite"
                                    Height="39"
                                    MinWidth="0"
                                    MinHeight="0"
                                    Margin="0"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="White"
                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ExpanderDownHeaderStyle}" />
                            </StackPanel>
                            <ContentPresenter
                                x:Name="ExpandSite"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Visibility="Collapsed" />

                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ExpanderHeaderDataTemplate">
        <DockPanel>
            <TextBlock
                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=ActualWidth}"
                Padding="4"
                HorizontalAlignment="Stretch"
                FontSize="16"
                Text="{Binding}" />
            <!--  Text="{Binding Header, RelativeSource={RelativeSource AncestorType=controls:LuiAccordionItem}}"  -->
        </DockPanel>
    </DataTemplate>

    <Style
        x:Key="Lui_AccordionItemStyle"
        TargetType="controls:LuiAccordionItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:LuiAccordionItem">
                    <Expander
                        Content="{TemplateBinding Content}"
                        Header="{TemplateBinding Header}"
                        HeaderTemplate="{StaticResource ExpanderHeaderDataTemplate}"
                        IsExpanded="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource AccordionExpanderStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>