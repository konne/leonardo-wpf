<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attachedP="clr-namespace:leonardo.AttachedProperties">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="../Resources/palette.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <FontFamily
        x:Key="QlikViewSans">
        pack://application:,,,/leonardo-wpf;component/#QlikView Sans
    </FontFamily>

    <Style
        x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush
        x:Key="RadioButton.Static.Background"
        Color="#FFFFFFFF" />
    <SolidColorBrush
        x:Key="RadioButton.Static.Border"
        Color="#FF707070" />
    <Style
        x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush
        x:Key="RadioButton.MouseOver.Background"
        Color="#FFF3F9FF" />
    <SolidColorBrush
        x:Key="RadioButton.MouseOver.Border"
        Color="#FF5593FF" />
    <SolidColorBrush
        x:Key="RadioButton.MouseOver.Glyph"
        Color="#FF212121" />
    <SolidColorBrush
        x:Key="RadioButton.Disabled.Background"
        Color="#FFE6E6E6" />
    <SolidColorBrush
        x:Key="RadioButton.Disabled.Border"
        Color="#FFBCBCBC" />
    <SolidColorBrush
        x:Key="RadioButton.Disabled.Glyph"
        Color="#FF707070" />
    <SolidColorBrush
        x:Key="RadioButton.Pressed.Background"
        Color="#FFD9ECFF" />
    <SolidColorBrush
        x:Key="RadioButton.Pressed.Border"
        Color="#FF3C77DD" />
    <SolidColorBrush
        x:Key="RadioButton.Pressed.Glyph"
        Color="#FF212121" />
    <SolidColorBrush
        x:Key="RadioButton.Static.Glyph"
        Color="#FF212121" />
    <Style
        x:Key="Lui_RadioButtonStyle"
        TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
        <Setter Property="FontFamily" Value="{StaticResource QlikViewSans}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale30}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type RadioButton}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="radioButtonBorder"
                            Margin="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="100">
                            <Grid
                                x:Name="markGrid"
                                Margin="5">
                                <Ellipse
                                    x:Name="optionMark"
                                    Width="10"
                                    Height="10"
                                    Fill="{StaticResource LUI.Brush.Grayscale100}"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="attachedP:ThemeProperties.Inverted" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource LUI.Brush.Grayscale100}" />
                        </Trigger>

                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.MouseOver.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Disabled.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Disabled.Glyph}" />
                        </Trigger>-->
                        <!--<Trigger Property="attachedP:ThemeProperties.Inverted" Value="false">
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.MouseOver.Background}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}" />
                        </Trigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="false" />
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.ORANGE}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.ORANGE}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="false" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.Grayscale100}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale60}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="False" />
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.Grayscale90}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale90}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.Grayscale90}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale90}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="true" />
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.ORANGE}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.ORANGE}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="true" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.Grayscale50}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale50}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="true" />
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.Grayscale35}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale35}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource LUI.Brush.Grayscale50}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="true" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.Grayscale35}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale35}" />
                        </MultiTrigger>

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.ORANGE}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.ORANGE}" />
                        </MultiTrigger>-->



                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="false" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.Grayscale30}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale30}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="true" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource LUI.Brush.Grayscale20}" />
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale100}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale0}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attachedP:ThemeProperties.Inverted" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource LUI.Brush.Grayscale100}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>